# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: Default

variables:
  solution: '*.sln'
  buildPlatform: 'ANY CPU'
  buildConfiguration: 'Release'

steps:

# - task: SonarCloudPrepare@1
#   displayName: SonarCloud analysis config
#   inputs:
#     SonarCloud: 'p1SonarCloudRev'
#     organization: '210503-reston-net'
#     scannerMode: 'MSBuild'
#     projectKey: '210503-Reston-NET_Valadez-Mykel-P1'
#     projectName: 'Valadez-Mykel-P1'
- task: DotNetCoreCLI@2
  displayName: Restore project deps
  inputs:
    command: 'restore'
    projects: $(solution)
    feedsToUse: 'select'
- task: DotNetCoreCLI@2
  displayName: Build the solution
  inputs:
    command: 'build'
    projects: $(solution)
- task: DotNetCoreCLI@2
  displayName: Run Tests
  inputs:
    command: 'test'
    projects: '**/StoreTest'
    # arguments: --configuration $(buildConfiguration) -- collect "Code Coverage"

# - task: SonarCloudAnalyze@1
#   displayName: Run Code Analysis
# - task: SonarCloudPublish@1
#   displayName: Publish Code Analysis
- task: DotNetCoreCLI@2
  displayName: Publishing
  inputs:
    command: 'publish'
    publishWebProjects: true
    zipAfterPublish: true
    projects: 'WebUI/*csproj'
- task: AzureRmWebAppDeployment@4
  displayName: Deploying
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(350a34a6-2c81-44a7-a7ab-9132754af350)'
    appType: 'webApp'
    WebAppName: 'DirtEmpire'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'