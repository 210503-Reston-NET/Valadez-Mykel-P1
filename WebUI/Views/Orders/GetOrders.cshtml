@model List<OrderVM>;
@{
    ViewData["Title"] = "GetOrders";
}

<h1>Your Orders</h1>
@if (Model.Count() > 0)
{
<table class="table">

    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].OrderId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].CustomerId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].LocationId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].ProductId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Delivered)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var mod in Model){
        <tr>
            <th>
                @Html.DisplayFor( m => mod.OrderId)
            </th>
            <th>
                @Html.DisplayFor(m => mod.CustomerId)
            </th>
            <th>
                @Html.DisplayFor(m => mod.LocationId)
            </th>
            <th>
                @Html.DisplayFor(m => mod.ProductId)
            </th>
            <th>
                @Html.DisplayFor(m => mod.Quantity)
            </th>
            <th>
                @Html.DisplayFor(m => mod.Delivered)
            </th>
        </tr>
        }
    </tbody>
</table>
}
<button class="btn-primary mt-4">
    @Html.ActionLink("Back", "Index", "Home", new CustomerVM{CustomerId = Model[0].CustomerId})
</button>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
